// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.12.3
// source: credit-card/credit-server.proto

package credit_card

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// CreditCardClient is the client API for CreditCard service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type CreditCardClient interface {
	Validate(ctx context.Context, in *Card, opts ...grpc.CallOption) (*Status, error)
}

type creditCardClient struct {
	cc grpc.ClientConnInterface
}

func NewCreditCardClient(cc grpc.ClientConnInterface) CreditCardClient {
	return &creditCardClient{cc}
}

func (c *creditCardClient) Validate(ctx context.Context, in *Card, opts ...grpc.CallOption) (*Status, error) {
	out := new(Status)
	err := c.cc.Invoke(ctx, "/CreditCard/Validate", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreditCardServer is the server API for CreditCard service.
// All implementations must embed UnimplementedCreditCardServer
// for forward compatibility
type CreditCardServer interface {
	Validate(context.Context, *Card) (*Status, error)
	mustEmbedUnimplementedCreditCardServer()
}

// UnimplementedCreditCardServer must be embedded to have forward compatible implementations.
type UnimplementedCreditCardServer struct {
}

func (UnimplementedCreditCardServer) Validate(context.Context, *Card) (*Status, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Validate not implemented")
}
func (UnimplementedCreditCardServer) mustEmbedUnimplementedCreditCardServer() {}

// UnsafeCreditCardServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to CreditCardServer will
// result in compilation errors.
type UnsafeCreditCardServer interface {
	mustEmbedUnimplementedCreditCardServer()
}

func RegisterCreditCardServer(s grpc.ServiceRegistrar, srv CreditCardServer) {
	s.RegisterService(&CreditCard_ServiceDesc, srv)
}

func _CreditCard_Validate_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Card)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreditCardServer).Validate(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CreditCard/Validate",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreditCardServer).Validate(ctx, req.(*Card))
	}
	return interceptor(ctx, in, info, handler)
}

// CreditCard_ServiceDesc is the grpc.ServiceDesc for CreditCard service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var CreditCard_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "CreditCard",
	HandlerType: (*CreditCardServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Validate",
			Handler:    _CreditCard_Validate_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "credit-card/credit-server.proto",
}
